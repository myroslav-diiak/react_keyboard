{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedButton","getPressedButton","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAyB,CACvBC,cAAe,IAFnB,EAaEC,iBAAmB,SAACC,GAClB,EAAKC,SAAS,CAAEH,cAAeE,EAAME,OAdzC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,oBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,oBAV/C,oBAiBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAEKF,KAAKR,MAAMC,cAAZ,mCACgCO,KAAKR,MAAMC,cAD3C,KAEI,kCAxBhB,GAAyBU,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.7abe9663.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedButton: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    pressedButton: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.getPressedButton);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.getPressedButton);\n  }\n\n  getPressedButton = (event: KeyboardEvent) => {\n    this.setState({ pressedButton: event.key });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {\n            (this.state.pressedButton)\n              ? `The last pressed key is [${this.state.pressedButton}]`\n              : 'Nothing was pressed yet'\n          }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}